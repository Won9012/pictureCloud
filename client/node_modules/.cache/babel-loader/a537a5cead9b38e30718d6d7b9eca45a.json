{"ast":null,"code":"var _jsxFileName = \"/Users/hwarang/pictureStory/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Login from \"./Routes/Login\";\nimport Signup from \"./Routes/Signup\";\nimport Logout from \"./Routes/Logout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(false);\n  const [userinfo, setUserinfo] = useState({\n    username: \"빅토르\"\n  });\n  const [accessToken, setAccessToken] = useState(null);\n  const navigate = useNavigate();\n\n  const isAuthenticated = async () => {\n    const data = await axios.get(\"http://localhost:4000/auth\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: accessToken\n      },\n      withCredentials: true\n    });\n\n    if (data) {\n      setIsLogin(true);\n      setUserinfo(data.data.data.userInfo);\n      navigate(\"/\");\n    }\n  };\n\n  const handleResponseSuccess = accessToken => {\n    setAccessToken(accessToken);\n    isAuthenticated();\n  };\n\n  const handleLogout = () => {\n    axios.post(\"http://localhost:4000/logout\").then(res => {\n      setUserinfo(null);\n      setAccessToken(null);\n      setIsLogin(false);\n      navigate(\"/\");\n    });\n  };\n\n  useEffect(() => {\n    isAuthenticated();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLogin ? /*#__PURE__*/_jsxDEV(Nav, {\n      isLogin: isLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 46\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          handleResponseSuccess: handleResponseSuccess,\n          accessToken: accessToken,\n          isLogin: isLogin,\n          setIsLogin: setIsLogin,\n          userinfo: userinfo,\n          setAccessToken: setAccessToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/myfrigo\",\n        element: /*#__PURE__*/_jsxDEV(Myfrigo, {\n          isLogin: isLogin,\n          accessToken: accessToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/mypage\",\n        element: /*#__PURE__*/_jsxDEV(MyPage, {\n          userinfo: userinfo,\n          accessToken: accessToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/recipe\",\n        element: /*#__PURE__*/_jsxDEV(Recipe, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/post\",\n        element: /*#__PURE__*/_jsxDEV(Post, {\n          isLogin: isLogin,\n          accessToken: accessToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 20\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \":tags\",\n          element: /*#__PURE__*/_jsxDEV(QuickPost, {\n            userinfo: userinfo,\n            accessToken: accessToken\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"edit/:id\",\n          element: /*#__PURE__*/_jsxDEV(EidtPost, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/logout\",\n        element: /*#__PURE__*/_jsxDEV(Logout, {\n          handleLogout: handleLogout,\n          isLogin: isLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"8XYMGuDZwVmGrGA/WcwnFIcZ49E=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hwarang/pictureStory/client/src/App.js"],"names":["Routes","Route","useNavigate","axios","useEffect","useState","Login","Signup","Logout","App","isLogin","setIsLogin","userinfo","setUserinfo","username","accessToken","setAccessToken","navigate","isAuthenticated","data","get","headers","Authorization","withCredentials","userInfo","handleResponseSuccess","handleLogout","post","then","res"],"mappings":"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","sourcesContent":["import { Routes, Route, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Login from \"./Routes/Login\";\nimport Signup from \"./Routes/Signup\";\nimport Logout from \"./Routes/Logout\";\n\nfunction App() {\n  const [isLogin, setIsLogin] = useState(false);\n  const [userinfo, setUserinfo] = useState({ username: \"빅토르\" });\n  const [accessToken, setAccessToken] = useState(null);\n  const navigate = useNavigate();\n\n  const isAuthenticated = async () => {\n    const data = await axios.get(\"http://localhost:4000/auth\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: accessToken,\n      },\n      withCredentials: true,\n    });\n\n    if (data) {\n      setIsLogin(true);\n      setUserinfo(data.data.data.userInfo);\n      navigate(\"/\");\n    }\n  };\n  const handleResponseSuccess = (accessToken) => {\n    setAccessToken(accessToken);\n    isAuthenticated();\n  };\n  const handleLogout = () => {\n    axios.post(\"http://localhost:4000/logout\").then((res) => {\n      setUserinfo(null);\n      setAccessToken(null);\n      setIsLogin(false);\n      navigate(\"/\");\n    });\n  };\n\n  useEffect(() => {\n    isAuthenticated();\n  }, []);\n\n  return (\n    <>\n      {isLogin ? <Nav isLogin={isLogin} /> : <Nav />}\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <Login\n              handleResponseSuccess={handleResponseSuccess}\n              accessToken={accessToken}\n              isLogin={isLogin}\n              setIsLogin={setIsLogin}\n              userinfo={userinfo}\n              setAccessToken={setAccessToken}\n            />\n          }\n        ></Route>\n        <Route path=\"/signup\" element={<Signup />}></Route>\n        <Route\n          path=\"/myfrigo\"\n          element={<Myfrigo isLogin={isLogin} accessToken={accessToken} />}\n        ></Route>\n        <Route\n          path=\"/mypage\"\n          element={<MyPage userinfo={userinfo} accessToken={accessToken} />}\n        ></Route>\n        <Route path=\"/recipe\" element={<Recipe />}></Route>\n        <Route\n          path=\"/post\"\n          element={<Post isLogin={isLogin} accessToken={accessToken} />}\n        >\n          <Route\n            path=\":tags\"\n            element={\n              <QuickPost userinfo={userinfo} accessToken={accessToken} />\n            }\n          />\n          <Route path=\"edit/:id\" element={<EidtPost />} />\n        </Route>\n        <Route\n          path=\"/logout\"\n          element={<Logout handleLogout={handleLogout} isLogin={isLogin} />}\n        ></Route>\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}